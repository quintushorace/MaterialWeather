apply plugin: 'com.android.application'
apply plugin: 'android-apt'

android {
    compileSdkVersion 24
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId "com.ape.material.weather"
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "HEWEATHER_KEY", HEWEATHER_KEY

    }
    signingConfigs {
        release {
            def filePrivateProperties = file("../private.properties")
            if (filePrivateProperties.exists()) {
                Properties propsPrivate = new Properties()
                propsPrivate.load(new FileInputStream(filePrivateProperties))

                storeFile file(propsPrivate['key.store'])
                keyAlias propsPrivate['key.alias']
                storePassword propsPrivate['key.store.password']
                keyPassword propsPrivate['key.alias.password']
            }
        }
    }

    applicationVariants.all { variant ->//获取 variant 参数，就是 productFlavor x buildType
        variant.outputs.each { output ->//获取输出文件
            def file = output.outputFile//修改实例
            if (file != null && file.name.endsWith('-release.apk')) {//变种名以release.apk结尾时才修改名字
                //def fileName = file.name.replace(file.name, "ApeScreenshot_V" + versionName + "_${buildTime()}.apk")
                def fileName = file.name.replace(file.name, "MaterialWeather" + "_V" + variant.versionName + ".apk")
                output.outputFile = new File(file.parentFile, fileName)
            } else if (file != null && file.name.endsWith('-debug.apk')) {
                def fileName = file.name.replace(file.name, "MaterialWeather-debug" + "_V" + variant.versionName + ".apk")
                output.outputFile = new File(file.parentFile, fileName)
            }
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //是否开启ACRA
            buildConfigField "boolean", "ACRA_ENABLED", "false"
            buildConfigField "String", "HEWEATHER_URL", HEWEATHER_FREE_URL
        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //是否开启ACRA
            buildConfigField "boolean", "ACRA_ENABLED", "true"
            buildConfigField "String", "HEWEATHER_URL", HEWEATHER_RELEASE_URL
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    //butterknife
    compile "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    apt "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    //permission dispatcher
//    compile 'com.github.hotchemi:permissionsdispatcher:2.1.3'
//    apt 'com.github.hotchemi:permissionsdispatcher-processor:2.1.3'

    //rxjava
    compile 'io.reactivex:rxjava:1.2.2'
    compile 'io.reactivex:rxandroid:1.2.1'

    //retrofit
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'

    compile 'com.jakewharton:disklrucache:2.0.2'

    compile ('com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:0.10.0@aar'){
        transitive=true
    }
}
